;; Examples:
;; \\tuplet 3/2 (c8 d e)
;; \\tuplet 3/2 (c4 d \\tuplet 3/2 (e8 f g)) ; nested tuplet (not quite tested)

(set! lily-command-alist (cons '(lily-parse-tuplet \\tuplet) lily-command-alist))

(define lily-tuplet-apply-ratio
  (lambda (frac tuplet)
    (for-each (lambda (note)
                (cond ((lily-note? note)
                       (set!lily-note.dur note (* (lily-note.dur note) frac)))
                      ((lily-rest? note)
                       (set!lily-rest.dur note (* (lily-rest.dur note) frac)))
                      ((lily-phrase? note)
                       (lily-tuplet-apply-ratio frac note))))
              (lily-phrase.notes tuplet))
    (set!lily-phrase.dur tuplet (* (lily-phrase.dur tuplet) frac))))

(define lily-parse-tuplet
  (lambda (cmd prev mexp)
    (let ((ratio (/ 1 (car mexp)))
          (tuplet (lily-parse-phrase prev (cadr mexp))))
      (list
       (lily-tuplet-apply-ratio ratio tuplet)
       ;; Compute the last pitch & dur for the later reference as `prev'.
       (cl:reduce (letrec ((choose
                            (lambda (x y)
                              (cond ((lily-note? y) y)
                                    ((lily-phrase? y)
                                     (cl:reduce choose (lily-phrase.notes y)))
                                    ((lily-phrase? x)
                                     (cl:reduce choose (lily-phrase.notes x)))
                                    (else x)))))
                    choose)
                  (lily-phrase.notes tuplet))
       (cddr mexp)))))
