;; Examples:
;; \tuplet 3/2 (c8 d e)
;; \tuplet 3/2 (c4 d \tuplet 3/2 (e8 f g)) ; nested tuplet (not quite tested)

(set! lily-command-alist (cons '(lily-parse-tuplet \tuplet) lily-command-alist))

(define lily-tuplet-apply-ratio
  (lambda (ratio tuplet)
    (for-each (lambda (note)
                (if (lily-phrase? note)
                    (lily-tuplet-apply-ratio ratio note)
                    (lily-duration! note (* (lily-duration note) ratio))))
              (lily-notes tuplet))
    (lily-duration! tuplet (* (lily-duration tuplet) ratio))
    tuplet))

(define lily-tuplet-parse-phrase
  (lambda (mexp k)
    (if (pair? (car mexp))
        (k (car mexp) (cdr mexp))
        (lily-parse-brackets mexp '{ '}
                             (lambda (notes attr mexp)
                               (k notes mexp))))))

(define lily-parse-tuplet
  (lambda (cmd prev mexp k)
    (let ((ratio (/ 1 (car mexp))))
      (lily-tuplet-parse-phrase
       (cdr mexp)
       (lambda (notes mexp)
         (let ((tuplet (lily-parse-phrase prev notes)))
           (k (lily-tuplet-apply-ratio ratio tuplet)
              ;; Compute the last pitch & dur for the later reference as `prev'.
              (cl:reduce (letrec ((choose
                                   (lambda (x y)
                                     (cond ((or (lily-note? y) (lily-chord? y)) y)
                                           ((lily-phrase? y)
                                            (cl:reduce choose
                                                       (lily-phrase.notes y)))
                                           ((lily-phrase? x)
                                            (cl:reduce choose
                                                       (lily-phrase.notes x)))
                                           (else x)))))
                           choose)
                         (lily-phrase.notes tuplet))
              mexp)))))))
