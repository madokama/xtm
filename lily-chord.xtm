;; Examples:
;; < c e g >   ; Angle bracketed notes with or without spaces around brackets.
;; <c e g>
;; <c e g>4 q2 ; Chord repeat with `q' plus optional duration.

(define lily-chord-matcher
  (lambda (mexp)
    (or (memq mexp '(< q))
        (lily-chord-repeat? mexp))))

(define lily-chord-repeat?
  (lambda (mexp)
    (lily-symbol-peek? mexp #\q)))

(define lily-parse-chord
  (lambda (cmd prev mexp k)
    (let ((return
           (lambda (chord mexp)
             (awhen (lily-parse-dur (lily-raw chord))
               (lily-duration chord it))
             (k (lily-apply-attr chord) mexp))))
      (if (lily-chord-repeat? cmd)
          (return (lily-raw (lily-copy prev) (symbol->string cmd))
                  mexp)
          (lily-parse-brackets
           mexp '< '>
           (lambda (notes attr mexp)
             (return
              (make-lily-chord 'notes (lily-serialize-notes prev notes)
                               'dur (lily-duration prev)
                               'raw attr)
              mexp)))))))

(set! lily-command-alist
      (cons (cons lily-parse-chord lily-chord-matcher) lily-command-alist))
